<beans xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<context:annotation-config />
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="resources/" />

	<context:component-scan base-package="m.k.s.eng.sakai" />

	<!-- Option 1 for ViewResolver -->
	<!-- This helps in mapping the logical view names to directly view files under a certain pre-configured directory -->
	<!-- <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
	<!-- <property name="prefix" value="views/" /> -->
	<!-- <property name="suffix" value=".jsp" /> -->
	<!-- </bean> -->

	<!-- Option 2 for ViewResolver -->
	<!-- New bean added for using Spring tiles -->
	<!-- <bean id="viewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver"/> -->

	<!-- <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer"> -->
	<!-- <property name="definitions"> -->
	<!-- <list> -->
	<!-- <value>/WEB-INF/views/layouts/layouts.xml</value> -->
	<!-- <value>/WEB-INF/views/**/views.xml</value> -->
	<!-- </list> -->
	<!-- </property> -->
	<!-- </bean> -->

	<!-- Using Thymeleaf for layout. Refer: http://www.thymeleaf.org/doc/tutorials/3.0/thymeleafspring.html -->
	<bean id="templateResolver" class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
		<property name="prefix" value="/WEB-INF/templates/" />
		<property name="suffix" value=".html" />
		<property name="templateMode" value="HTML" />
	</bean>

	<bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
		<property name="templateResolver" ref="templateResolver" />
		<property name="enableSpringELCompiler" value="true" />
	</bean>

	<bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
		<property name="templateEngine" ref="templateEngine" />
		<property name="order" value="1" />
	</bean>

	<!-- Load configuration file. -->
	<bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="location">
			<value>/WEB-INF/app-config.properties</value>
		</property>
	</bean>

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="m.k.s.eng.sakai.entity" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="true" />
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
				<prop key="hibernate.globally_quoted_identifiers">true</prop>
			</props>
		</property>
	</bean>
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/sakaimks?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false" />
		<property name="username" value="sakaimks" />
		<property name="password" value="SakaiMKS!2018" />
	</bean>
	<!-- <tx:annotation-driven/> -->

	<jpa:repositories base-package="m.k.s.eng.sakai.repository" />
	<!-- <context:component-scan base-package="m.k.s.eng.sakai" /> -->
	<!-- <bean name="homeControllerBeans" class="m.k.s.eng.sakai.controller.HomeController"> -->
	<!-- <property name="sakaiProxy" ref="m.k.s.eng.sakai.logic.SakaiProxy" /> -->
	<!-- </bean> -->

	<!-- <bean name="sakaiProxy" class="m.k.s.eng.sakai.service.impl.AssessmentToeicServiceImpl"> -->
	<!-- <property name="sakaiProxy" ref="m.k.s.eng.sakai.logic.SakaiProxy" /> -->
	<!-- </bean> -->
</beans>
